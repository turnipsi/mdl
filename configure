#!/bin/sh
# $Id: configure,v 1.16 2016/05/10 09:06:26 je Exp $

# Copyright (c) 2016 Juha Erkkil√§ <je@turnipsi.no-ip.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -eu

cc=${CC:-cc}
srcdir="$(dirname $0)"
config_h_path="${srcdir}/config.h"
config_mk_path="${srcdir}/config.mk"
include_compat_h=false

append_to_config_h()  { echo "$1" >> "$config_h_path";  }
append_to_config_mk() { echo "$1" >> "$config_mk_path"; }

init_config() {
  cat /dev/null > "$config_h_path"
  cat /dev/null > "$config_mk_path"
}

show_config() {
  if [ -s "$config_h_path" ]; then
    echo
    echo "Created the following config.h:"
    sed 's/^/    /' "$config_h_path"
  fi
  if [ -s "$config_mk_path" ]; then
    echo
    echo "Created the following config.mk:"
    sed 's/^/    /' "$config_mk_path"
  fi
}

check_cc() {
  $cc -x c -Werror-implicit-function-declaration -o /dev/null - 2>/dev/null
}

check_asprintf() {
  check_cc <<'EOF'
#include <stdio.h>
int main(void) { asprintf(NULL, NULL); }
EOF

}

check_dead() {
  check_cc <<'EOF'
#include <sys/types.h>
void __dead foo(void);
int main(void) {}
EOF
}

check_malloc_options() {
  check_cc <<'EOF'
#include <stdlib.h>
extern char *malloc_options;
int main(void) { malloc_options = (char *) "AFGJPS"; }
EOF
}

check_pledge() {
  check_cc <<'EOF'
#include <unistd.h>
int main(void) { pledge(NULL, NULL); }
EOF
}

check_reallocarray() {
  check_cc <<'EOF'
#include <stdlib.h>
int main(void) { reallocarray(NULL, 0, 0); }
EOF
}

check_sndio() {
  check_cc <<'EOF'
#include <sndio.h>
int main(void) {}
EOF
}

check_strlcpy() {
  check_cc <<'EOF'
#include <string.h>
int main(void) { strlcpy(NULL, NULL, 0); }
EOF
}

check_strsep() {
  check_cc <<'EOF'
#include <string.h>
int main(void) { strsep(NULL, NULL); }
EOF
}

check_strtonum() {
  check_cc <<'EOF'
#include <stdlib.h>
int main(void) { strtonum(NULL, 0, 0, NULL); }
EOF
}

check_sys_midiio() {
  check_cc <<'EOF'
#include <sys/types.h>
#include <sys/midiio.h>
int main(void) {}
EOF
}

check_va_copy() {
  check_cc <<'EOF'
#include <stdarg.h>
int main(void) { va_list dst, src; va_copy(dst, src); }
EOF
}

do_check() {
  checkname=$1
  checkfunc=$2

  echo -n "Checking for ${checkname}... "
  if $checkfunc; then
    echo ok.
  else
    echo NOT found.
    return 1
  fi

  return 0
}

init_config

if do_check asprintf check_asprintf; then
  append_to_config_h '#define HAVE_ASPRINTF 1'
else
  append_to_config_mk 'SRCS += ${COMPATDIR}/asprintf.c'
  include_compat_h=true
fi

if do_check attribute__dead check_dead; then
  append_to_config_h '#define HAVE_ATTRIBUTE__DEAD 1'
fi

if do_check malloc_options check_malloc_options; then
  append_to_config_h '#define HAVE_MALLOC_OPTIONS 1'
fi

if do_check 'pledge()' check_pledge; then
  append_to_config_h '#define HAVE_PLEDGE 1'
else
  append_to_config_mk 'SRCS += ${COMPATDIR}/pledge.c'
  include_compat_h=true
fi

if do_check 'reallocarray()' check_reallocarray; then
  append_to_config_h '#define HAVE_REALLOCARRAY 1'
else
  append_to_config_mk 'SRCS += ${COMPATDIR}/reallocarray.c'
  include_compat_h=true
fi

if do_check 'strlcpy()' check_strlcpy; then
  append_to_config_h '#define HAVE_STRLCPY 1'
else
  append_to_config_mk 'SRCS += ${COMPATDIR}/strlcpy.c'
  include_compat_h=true
fi

if do_check 'strsep()' check_strsep; then
  append_to_config_h '#define HAVE_STRSEP 1'
else
  append_to_config_mk 'SRCS += ${COMPATDIR}/strsep.c'
  include_compat_h=true
fi

if do_check 'strtonum()' check_strtonum; then
  append_to_config_h '#define HAVE_STRTONUM 1'
else
  append_to_config_mk 'SRCS += ${COMPATDIR}/strtonum.c'
  include_compat_h=true
fi

if do_check sndio check_sndio; then
  append_to_config_h '#define HAVE_SNDIO 1'
  append_to_config_mk 'LIBMDL_LDADD += -lsndio'
fi

if do_check va_copy check_va_copy; then
  append_to_config_h '#define HAVE_VA_COPY 1'
fi

if $include_compat_h; then
  echo '#include "compat.h"' >> "$config_h_path"
fi

show_config
