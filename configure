#!/bin/sh
# $Id: configure,v 1.3 2016/04/19 20:23:06 je Exp $

# Copyright (c) 2016 Juha Erkkil√§ <je@turnipsi.no-ip.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -eu

CC=cc
CONFIG_PATH="$(dirname $0)/config.mk"

append_to_config_mk() {
  echo "$1" >> "$CONFIG_PATH"
}

init_config_mk() {
  cat /dev/null > "$CONFIG_PATH"
}

show_config_mk() {
  echo
  echo "Created the following config.mk:"
  echo '---'
  cat "$CONFIG_PATH"
  echo '---'
}

check_cc() {
  ${CC} -c -x c -Werror-implicit-function-declaration -o /dev/null - \
    2>/dev/null
}

check_pledge() {
  check_cc <<'EOF'
#include <unistd.h>
void test(void) { pledge(NULL, NULL); }
EOF
}

check_sndio() {
  check_cc <<'EOF'
#include <sndio.h>
EOF
}

check_strlcpy() {
  check_cc <<'EOF'
#include <string.h>
void test(void) { strlcpy(NULL, NULL, 0); }
EOF
}

check_strsep() {
  check_cc <<'EOF'
#include <string.h>
void test(void) { strsep(NULL, NULL); }
EOF
}

check_strtonum() {
  check_cc <<'EOF'
#include <stdlib.h>
void test(void) { strtonum(NULL, 0, 0, NULL); }
EOF
}

do_check() {
  checkname=$1
  checkfunc=$2
  config_variable=$3
  compat_code=$4

  echo -n "Checking for ${checkname}... "
  if $checkfunc; then
    echo ok.
    if [ -n "$config_variable" ]; then
      append_to_config_mk "COPTS += -D${config_variable}"
    fi
  else
    echo FAILED.
    if [ -n "$compat_code" ]; then
      append_to_config_mk "SRCS += ${compat_code}"
    fi
  fi
}

init_config_mk

do_check 'pledge()'   check_pledge   HAVE_PLEDGE   pledge.c
do_check 'sndio'      check_sndio    HAVE_SNDIO    ''
do_check 'strlcpy()'  check_strlcpy  HAVE_STRLCPY  strlcpy.c
do_check 'strtonum()' check_strtonum HAVE_STRTONUM strtonum.c
do_check 'strsep()'   check_strsep   HAVE_STRSEP   strsep.c

show_config_mk
